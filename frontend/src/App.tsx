//new code
// import { useState, useEffect } from "react";
// import axios from "axios";
// import "./App.css";

// // Importing images for cover pages from assets
// import polioImg from "./assets/polio.jpg";
// import pmYojanaImg from "./assets/pmAyush.jpg";
// import ncdcImg from "./assets/epidemic.jpg";
// import maternalHealthImg from "./assets/maternalHealth.jpg";
// import ashokEmblem from "./assets/ashok2.png";
// import healthImg from "./assets/health.jpeg";
// import yogaImg from "./assets/yoga.jpeg";
// import ayurvedImg from "./assets/ayurved.jpeg";

// // Import Login component
// import Login from "./components/Login";

// interface Message {
//   sender: string;
//   text: string;
//   timestamp: string;
// }

// function App() {
//   const [messages, setMessages] = useState<Message[]>([]);
//   const [input, setInput] = useState("");
//   const [language, setLanguage] = useState<"hi" | "en">("hi");
//   const [loading, setLoading] = useState(false);
//   const [showLogin, setShowLogin] = useState(false);

//   // Add this function to handle login navigation
//   const handleLoginClick = () => {
//     setShowLogin(true);
//   };

//   // Add this function to handle going back to the main app
//   const handleBackToApp = () => {
//     setShowLogin(false);
//   };

//   // If showLogin is true, render the Login component
//   if (showLogin) {
//     return <Login onBack={handleBackToApp} />;
//   }

//   const translations = {
//     hi: {
//       title: "‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§∏‡•á‡§µ‡§æ ‡§ö‡•à‡§ü‡§¨‡•â‡§ü",
//       subtitle: "‡§≠‡§æ‡§∞‡§§ ‡§∏‡§∞‡§ï‡§æ‡§∞ | ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§è‡§µ‡§Ç ‡§™‡§∞‡§ø‡§µ‡§æ‡§∞ ‡§ï‡§≤‡•ç‡§Ø‡§æ‡§£ ‡§Æ‡§Ç‡§§‡•ç‡§∞‡§æ‡§≤‡§Ø",
//       welcome:
//         "‡§®‡§Æ‡§∏‡•ç‡§§‡•á! ‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§ï‡§æ ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§∏‡§π‡§æ‡§Ø‡§ï ‡§π‡•Ç‡§Å‡•§ ‡§Ü‡§™ ‡§Æ‡•Å‡§ù‡§∏‡•á ‡§¨‡•Ä‡§Æ‡§æ‡§∞‡§ø‡§Ø‡•ã‡§Ç, ‡§ü‡•Ä‡§ï‡§æ‡§ï‡§∞‡§£ ‡§î‡§∞ ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§∏‡§Ç‡§¨‡§Ç‡§ß‡•Ä ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§™‡•Ç‡§õ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç‡•§",
//       placeholder: "‡§Ö‡§™‡§®‡§æ ‡§™‡•ç‡§∞‡§∂‡•ç‡§® ‡§Ø‡§π‡§æ‡§Å ‡§≤‡§ø‡§ñ‡•á‡§Ç...",
//       send: "‡§≠‡•á‡§ú‡•á‡§Ç",
//       helplineArray: [
//         "üìû ‡§Ü‡§™‡§æ‡§§‡§ï‡§æ‡§≤‡•Ä‡§® ‡§π‡•á‡§≤‡•ç‡§™‡§≤‡§æ‡§á‡§®: 108",
//         "üöë ‡§≤‡•ã‡§ï‡§≤ ‡§è‡§Æ‡•ç‡§¨‡•Å‡§≤‡•á‡§Ç‡§∏: 102",
//         "üíä ‡§™‡•ç‡§∞‡§ß‡§æ‡§®‡§Æ‡§Ç‡§§‡•ç‡§∞‡•Ä ‡§ú‡§® ‡§î‡§∑‡§ß‡§ø ‡§ï‡•á‡§Ç‡§¶‡•ç‡§∞: 1800-11-4415 ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§ú‡§æ‡§®‡•á‡§Ç‡•§",
//       ],

//       you: "‡§Ü‡§™",
//       bot: "‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§∏‡§π‡§æ‡§Ø‡§ï",
//       quickActions: {
//         title: "‡§§‡•ç‡§µ‡§∞‡§ø‡§§ ‡§∏‡§π‡§æ‡§Ø‡§§‡§æ",
//         vaccination: "‡§ü‡•Ä‡§ï‡§æ‡§ï‡§∞‡§£ ‡§∂‡•á‡§°‡•ç‡§Ø‡•Ç‡§≤",
//         symptoms: "COVID-19 ‡§≤‡§ï‡•ç‡§∑‡§£",
//         nearbyHospital: "‡§®‡§ú‡§º‡§¶‡•Ä‡§ï‡•Ä ‡§Ö‡§∏‡•ç‡§™‡§§‡§æ‡§≤",
//         emergency: "‡§Ü‡§™‡§æ‡§§‡§ï‡§æ‡§≤‡•Ä‡§® ‡§∏‡•á‡§µ‡§æ",
//       },
//     },
//     en: {
//       title: "Health Service Chatbot",
//       subtitle: "Government of India | Ministry of Health & Family Welfare",
//       welcome:
//         "Hello! I am your health assistant. I can provide information about diseases, vaccination schedules, and health-related queries.",
//       placeholder: "Type your question here...",
//       send: "Send",
//       helplineArray: [
//         "üìû Emergency Helpline: 108",
//         "üöë Local Ambulance: 102",
//         "üíä PM Jan Aushadhi: 1800-11-4415",
//       ],
//       you: "You",
//       bot: "Health Assistant",
//       quickActions: {
//         title: "Quick Help",
//         vaccination: "Vaccination Schedule",
//         symptoms: "COVID-19 Symptoms",
//         nearbyHospital: "Nearby Hospitals",
//         emergency: "Emergency Services",
//       },
//     },
//   };

//   const t = translations[language];

//   const sendMessage = async (message?: string) => {
//     const textToSend = message || input;
//     if (!textToSend.trim()) return;

//     const timestamp = new Date().toLocaleTimeString("hi-IN", {
//       hour: "2-digit",
//       minute: "2-digit",
//     });

//     setMessages([
//       ...messages,
//       {
//         sender: t.you,
//         text: textToSend,
//         timestamp,
//       },
//     ]);
//     setLoading(true);

//     try {
//       const res = await axios.post("http://127.0.0.1:8000/api/chat/", {
//         message: textToSend,
//         language: language,
//       });

//       setMessages((prev) => [
//         ...prev,
//         {
//           sender: t.bot,
//           text: res.data.bot,
//           timestamp: new Date().toLocaleTimeString("hi-IN", {
//             hour: "2-digit",
//             minute: "2-digit",
//           }),
//         },
//       ]);
//     } catch (err) {
//       setMessages((prev) => [
//         ...prev,
//         {
//           sender: t.bot,
//           text:
//             language === "hi"
//               ? "‚ö†Ô∏è ‡§∏‡§∞‡•ç‡§µ‡§∞ ‡§∏‡•á ‡§ï‡§®‡•á‡§ï‡•ç‡§ü ‡§®‡§π‡•Ä‡§Ç ‡§π‡•ã ‡§™‡§æ ‡§∞‡§π‡§æ ‡§π‡•à"
//               : "‚ö†Ô∏è Error connecting to server",
//           timestamp: new Date().toLocaleTimeString("hi-IN", {
//             hour: "2-digit",
//             minute: "2-digit",
//           }),
//         },
//       ]);
//     } finally {
//       setLoading(false);
//     }

//     setInput("");
//   };

//   const quickAction = (action: string) => {
//     sendMessage(action);
//   };

//   return (
//     <div className="app-container">
//       {/* Header */}
//       <header className="gov-header">
//         <div className="header-content">
//           <div className="header-left">
//             <div className="gov-logo">
//               <img src={ashokEmblem} alt="Ashoka Emblem" width={50} />
//               <div>
//                 <h1>{t.title}</h1>
//                 <p>{t.subtitle}</p>
//               </div>
//             </div>
//           </div>

//           <div className="header-right">
//             {/* Login Button */}
//             <button className="login-btn" onClick={handleLoginClick}>
//               <svg
//                 width="16"
//                 height="16"
//                 viewBox="0 0 16 16"
//                 fill="currentColor"
//               >
//                 <path d="M8 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm4-6c0-.6-.4-1-1-1H5c-.6 0-1 .4-1 1v10c0 .6.4 1 1 1h6c.6 0 1-.4 1-1V4z" />
//               </svg>
//               {language === "hi" ? "‡§≤‡•â‡§ó‡§ø‡§®" : "Login"}
//             </button>

//             <div className="language-toggle">
//               <button
//                 className={language === "hi" ? "active" : ""}
//                 onClick={() => setLanguage("hi")}
//               >
//                 ‡§π‡§ø‡§®‡•ç‡§¶‡•Ä
//               </button>
//               <button
//                 className={language === "en" ? "active" : ""}
//                 onClick={() => setLanguage("en")}
//               >
//                 English
//               </button>
//             </div>
//           </div>
//         </div>

//         {/* Emergency bar messages */}
//         <div className="emergency-bar">
//           <div className="ticker-wrapper">
//             <div className="ticker">
//               {t.helplineArray.map((msg, idx) => (
//                 <div key={idx} className="ticker-message">
//                   {msg}
//                 </div>
//               ))}
//             </div>
//           </div>
//         </div>
//       </header>

//       {/* Main Chat Container */}
//       <div className="chat-container">
//         {/* Quick Actions */}
//         <div className="quick-actions">
//           <h3>{t.quickActions.title}</h3>
//           <div className="action-buttons">
//             <button onClick={() => quickAction(t.quickActions.vaccination)}>
//               üíâ {t.quickActions.vaccination}
//             </button>
//             <button onClick={() => quickAction(t.quickActions.symptoms)}>
//               ü§í {t.quickActions.symptoms}
//             </button>
//             <button onClick={() => quickAction(t.quickActions.nearbyHospital)}>
//               üè• {t.quickActions.nearbyHospital}
//             </button>
//             <button
//               onClick={() => quickAction(t.quickActions.emergency)}
//               className="emergency"
//             >
//               üö® {t.quickActions.emergency}
//             </button>
//           </div>
//         </div>

//         {/* Chat Messages */}
//         <div className="chat-messages">
//           {messages.length === 0 && (
//             <div className="welcome-message">
//               <img
//                 src="https://cdn-icons-png.flaticon.com/512/2972/2972207.png"
//                 alt="Health Icon"
//               />
//               <p>{t.welcome}</p>

//               {/* Info Cards Section */}
//               <div className="info-row">
//                 {/* Card 1 - Polio Prevention */}
//                 <a
//                   href="https://www.mohfw.gov.in/"
//                   target="_blank"
//                   rel="noopener noreferrer"
//                   className="flip-card"
//                 >
//                   <div className="flip-card-inner">
//                     <div
//                       className="flip-card-front card1"
//                       style={{
//                         backgroundImage: `url(${polioImg})`,
//                         backgroundSize: "cover",
//                         backgroundPosition: "center",
//                       }}
//                     >
//                       ü©∫ Polio Prevention
//                     </div>
//                     <div className="flip-card-back card1">
//                       Learn how to prevent polio ‚Üí
//                     </div>
//                   </div>
//                 </a>

//                 {/* Card 2 - PM Yojanas */}
//                 <a
//                   href="https://www.myscheme.gov.in/"
//                   target="_blank"
//                   rel="noopener noreferrer"
//                   className="flip-card"
//                 >
//                   <div className="flip-card-inner">
//                     <div
//                       className="flip-card-front card1"
//                       style={{
//                         backgroundImage: `url(${pmYojanaImg})`,
//                         backgroundSize: "cover",
//                         backgroundPosition: "center",
//                       }}
//                     >
//                       ü©∫ Ayushman Bharat Yojna
//                     </div>
//                     <div className="flip-card-back card1">
//                       Explore PM Schemes ‚Üí
//                     </div>
//                   </div>
//                 </a>

//                 {/* Card 3 - NCDC */}
//                 <a
//                   href="https://ncdc.gov.in/"
//                   target="_blank"
//                   rel="noopener noreferrer"
//                   className="flip-card"
//                 >
//                   <div className="flip-card-inner">
//                     <div
//                       className="flip-card-front card1"
//                       style={{
//                         backgroundImage: `url(${ncdcImg})`,
//                         backgroundSize: "cover",
//                         backgroundPosition: "center",
//                       }}
//                     >
//                       ü¶† Epidemic Control
//                     </div>
//                     <div className="flip-card-back card1">
//                       Prevent outbreaks ‚Üí
//                     </div>
//                   </div>
//                 </a>

//                 {/* Card 4 - NHM */}
//                 <a
//                   href="https://nhm.gov.in/"
//                   target="_blank"
//                   rel="noopener noreferrer"
//                   className="flip-card"
//                 >
//                   <div className="flip-card-inner">
//                     <div
//                       className="flip-card-front card1"
//                       style={{
//                         backgroundImage: `url(${maternalHealthImg})`,
//                         backgroundSize: "cover",
//                         backgroundPosition: "center",
//                       }}
//                     >
//                       Maternal Health
//                     </div>
//                     <div className="flip-card-back card1">
//                       Post pregnancy Care ‚Üí
//                     </div>
//                   </div>
//                 </a>
//               </div>

//               {/* Second Row - Health, Yoga, Ayurveda */}
//               <div className="info-row second-row">
//                 {/* Card 5 - Health */}
//                 <a
//                   href="https://nutritionsource.hsph.harvard.edu/healthy-eating-plate/translations/hindi/"
//                   target="_blank"
//                   rel="noopener noreferrer"
//                   className="flip-card"
//                 >
//                   <div className="flip-card-inner">
//                     <div
//                       className="flip-card-front card2"
//                       style={{
//                         backgroundImage: `url(${healthImg})`,
//                         backgroundSize: "cover",
//                         backgroundPosition: "center",
//                       }}
//                     >
//                       ü•ó ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø
//                     </div>
//                     <div className="flip-card-back card2">
//                       ‡§∏‡•ç‡§µ‡§∏‡•ç‡§• ‡§Ü‡§π‡§æ‡§∞ ‡§Ø‡•ã‡§ú‡§®‡§æ ‚Üí
//                     </div>
//                   </div>
//                 </a>

//                 {/* Card 6 - Yoga */}
//                 <a
//                   href="https://yoga.ayush.gov.in/"
//                   target="_blank"
//                   rel="noopener noreferrer"
//                   className="flip-card"
//                 >
//                   <div className="flip-card-inner">
//                     <div
//                       className="flip-card-front card2"
//                       style={{
//                         backgroundImage: `url(${yogaImg})`,
//                         backgroundSize: "cover",
//                         backgroundPosition: "center",
//                       }}
//                     >
//                       üßò ‡§Ø‡•ã‡§ó
//                     </div>
//                     <div className="flip-card-back card2">
//                       ‡§Ø‡•ã‡§ó ‡§ï‡•á ‡§≤‡§æ‡§≠ ‡§ú‡§æ‡§®‡•á‡§Ç ‚Üí
//                     </div>
//                   </div>
//                 </a>

//                 {/* Card 7 - Ayurveda */}
//                 <a
//                   href="https://ayush.gov.in/#!/"
//                   target="_blank"
//                   rel="noopener noreferrer"
//                   className="flip-card"
//                 >
//                   <div className="flip-card-inner">
//                     <div
//                       className="flip-card-front card2"
//                       style={{
//                         backgroundImage: `url(${ayurvedImg})`,
//                         backgroundSize: "cover",
//                         backgroundPosition: "center",
//                       }}
//                     >
//                       üåø ‡§Ü‡§Ø‡•Å‡§∞‡•ç‡§µ‡•á‡§¶
//                     </div>
//                     <div className="flip-card-back card2">
//                       ‡§Ü‡§Ø‡•Å‡§∞‡•ç‡§µ‡•á‡§¶‡§ø‡§ï ‡§â‡§™‡§ö‡§æ‡§∞ ‚Üí
//                     </div>
//                   </div>
//                 </a>
//               </div>
//             </div>
//           )}

//           {messages.map((msg, idx) => (
//             <div
//               key={idx}
//               className={`message ${
//                 msg.sender === t.you ? "user-message" : "bot-message"
//               }`}
//             >
//               <div className="message-header">
//                 <span className="sender">{msg.sender}</span>
//                 <span className="timestamp">{msg.timestamp}</span>
//               </div>
//               <div className="message-text">{msg.text}</div>
//             </div>
//           ))}

//           {loading && (
//             <div className="typing-indicator">
//               <span></span>
//               <span></span>
//               <span></span>
//             </div>
//           )}
//         </div>

//         {/* Input Area */}
//         <div className="input-area">
//           <input
//             type="text"
//             value={input}
//             onChange={(e) => setInput(e.target.value)}
//             onKeyPress={(e) => e.key === "Enter" && sendMessage()}
//             placeholder={t.placeholder}
//             className="message-input"
//           />
//           <button
//             onClick={() => sendMessage()}
//             className="send-button"
//             disabled={loading}
//           >
//             {loading ? "..." : t.send}
//           </button>
//         </div>
//       </div>

//       {/* Footer */}
//       <footer className="gov-footer">
//         <p>¬© 2025 ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§è‡§µ‡§Ç ‡§™‡§∞‡§ø‡§µ‡§æ‡§∞ ‡§ï‡§≤‡•ç‡§Ø‡§æ‡§£ ‡§Æ‡§Ç‡§§‡•ç‡§∞‡§æ‡§≤‡§Ø, ‡§≠‡§æ‡§∞‡§§ ‡§∏‡§∞‡§ï‡§æ‡§∞</p>
//         <p>Ministry of Health & Family Welfare, Government of India</p>
//       </footer>
//     </div>
//   );
// }

// export default App;

//new code using api
import { useState, useEffect } from "react";
import axios from "axios";
import "./App.css";

// Importing images for cover pages from assets
import polioImg from "./assets/polio.jpg";
import pmYojanaImg from "./assets/pmAyush.jpg";
import ncdcImg from "./assets/epidemic.jpg";
import maternalHealthImg from "./assets/maternalHealth.jpg";
import ashokEmblem from "./assets/ashok2.png";
import healthImg from "./assets/health.jpeg";
import yogaImg from "./assets/yoga.jpeg";
import ayurvedImg from "./assets/ayurved.jpeg";

// Import Login component
import Login from "./components/Login";
import Register from "./components/Register";

interface Message {
  sender: string;
  text: string;
  timestamp: string;
}

interface User {
  username: string;
  email: string;
}

interface ApiError {
  response?: {
    data?: {
      detail?: string;
      message?: string;
    };
  };
}

function App() {
  const [messages, setMessages] = useState<Message[]>([]);
  const [input, setInput] = useState("");
  const [language, setLanguage] = useState<"hi" | "en">("hi");
  const [loading, setLoading] = useState(false);
  const [showLogin, setShowLogin] = useState(false);
  const [showRegister, setShowRegister] = useState(false);
  const [isLoggedIn, setIsLoggedIn] = useState(false);
  const [user, setUser] = useState<User | null>(null);

  // Check if user is already logged in
  useEffect(() => {
    const token = localStorage.getItem("access_token");
    if (token) {
      setIsLoggedIn(true);
      fetchUserProfile(token);
    }
  }, []);

  const fetchUserProfile = async (token: string) => {
    try {
      const response = await axios.get("http://127.0.0.1:8000/api/profile/", {
        headers: {
          Authorization: `Bearer ${token}`,
        },
      });
      setUser(response.data);
    } catch (error) {
      console.error("Error fetching user profile:", error);
      // If token is expired, try to refresh it
      const refreshToken = localStorage.getItem("refresh_token");
      if (refreshToken) {
        try {
          const refreshResponse = await axios.post(
            "http://127.0.0.1:8000/api/token/refresh/",
            {
              refresh: refreshToken,
            }
          );
          localStorage.setItem("access_token", refreshResponse.data.access);
          fetchUserProfile(refreshResponse.data.access);
        } catch (refreshError) {
          console.error("Error refreshing token:", refreshError);
          handleLogout();
        }
      }
    }
  };

  const handleLoginClick = () => {
    setShowLogin(true);
  };

  const handleRegisterClick = () => {
    setShowRegister(true);
  };

  const handleBackToApp = () => {
    setShowLogin(false);
    setShowRegister(false);
  };

  const handleLoginSuccess = (tokenData: {
    access: string;
    refresh: string;
  }) => {
    localStorage.setItem("access_token", tokenData.access);
    localStorage.setItem("refresh_token", tokenData.refresh);
    setIsLoggedIn(true);
    fetchUserProfile(tokenData.access);
    setShowLogin(false);
  };

  const handleRegisterSuccess = (tokenData: {
    access: string;
    refresh: string;
  }) => {
    localStorage.setItem("access_token", tokenData.access);
    localStorage.setItem("refresh_token", tokenData.refresh);
    setIsLoggedIn(true);
    fetchUserProfile(tokenData.access);
    setShowRegister(false);
  };

  const handleLogout = () => {
    localStorage.removeItem("access_token");
    localStorage.removeItem("refresh_token");
    setIsLoggedIn(false);
    setUser(null);
  };

  // If showLogin is true, render the Login component
  if (showLogin) {
    return (
      <Login onBack={handleBackToApp} onLoginSuccess={handleLoginSuccess} />
    );
  }

  // If showRegister is true, render the Register component
  if (showRegister) {
    return (
      <Register
        onBack={handleBackToApp}
        onRegisterSuccess={handleRegisterSuccess}
      />
    );
  }

  const translations = {
    hi: {
      title: "‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§∏‡•á‡§µ‡§æ ‡§ö‡•à‡§ü‡§¨‡•â‡§ü",
      subtitle: "‡§≠‡§æ‡§∞‡§§ ‡§∏‡§∞‡§ï‡§æ‡§∞ | ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§è‡§µ‡§Ç ‡§™‡§∞‡§ø‡§µ‡§æ‡§∞ ‡§ï‡§≤‡•ç‡§Ø‡§æ‡§£ ‡§Æ‡§Ç‡§§‡•ç‡§∞‡§æ‡§≤‡§Ø",
      welcome:
        "‡§®‡§Æ‡§∏‡•ç‡§§‡•á! ‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§ï‡§æ ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§∏‡§π‡§æ‡§Ø‡§ï ‡§π‡•Ç‡§Å‡•§ ‡§Ü‡§™ ‡§Æ‡•Å‡§ù‡§∏‡•á ‡§¨‡•Ä‡§Æ‡§æ‡§∞‡§ø‡§Ø‡•ã‡§Ç, ‡§ü‡•Ä‡§ï‡§æ‡§ï‡§∞‡§£ ‡§î‡§∞ ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§∏‡§Ç‡§¨‡§Ç‡§ß‡•Ä ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§™‡•Ç‡§õ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç‡•§",
      placeholder: "‡§Ö‡§™‡§®‡§æ ‡§™‡•ç‡§∞‡§∂‡•ç‡§® ‡§Ø‡§π‡§æ‡§Å ‡§≤‡§ø‡§ñ‡•á‡§Ç...",
      send: "‡§≠‡•á‡§ú‡•á‡§Ç",
      helplineArray: [
        "üìû ‡§Ü‡§™‡§æ‡§§‡§ï‡§æ‡§≤‡•Ä‡§® ‡§π‡•á‡§≤‡•ç‡§™‡§≤‡§æ‡§á‡§®: 108",
        "üöë ‡§≤‡•ã‡§ï‡§≤ ‡§è‡§Æ‡•ç‡§¨‡•Å‡§≤‡•á‡§Ç‡§∏: 102",
        "üíä ‡§™‡•ç‡§∞‡§ß‡§æ‡§®‡§Æ‡§Ç‡§§‡•ç‡§∞‡•Ä ‡§ú‡§® ‡§î‡§∑‡§ß‡§ø ‡§ï‡•á‡§Ç‡§¶‡•ç‡§∞: 1800-11-4415 ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§ú‡§æ‡§®‡•á‡§Ç‡•§",
      ],

      you: "‡§Ü‡§™",
      bot: "‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§∏‡§π‡§æ‡§Ø‡§ï",
      quickActions: {
        title: "‡§§‡•ç‡§µ‡§∞‡§ø‡§§ ‡§∏‡§π‡§æ‡§Ø‡§§‡§æ",
        vaccination: "‡§ü‡•Ä‡§ï‡§æ‡§ï‡§∞‡§£ ‡§∂‡•á‡§°‡•ç‡§Ø‡•Ç‡§≤",
        symptoms: "COVID-19 ‡§≤‡§ï‡•ç‡§∑‡§£",
        nearbyHospital: "‡§®‡§ú‡§º‡§¶‡•Ä‡§ï‡•Ä ‡§Ö‡§∏‡•ç‡§™‡§§‡§æ‡§≤",
        emergency: "‡§Ü‡§™‡§æ‡§§‡§ï‡§æ‡§≤‡•Ä‡§® ‡§∏‡•á‡§µ‡§æ",
      },
      login: "‡§≤‡•â‡§ó‡§ø‡§®",
      register: "‡§∞‡§ú‡§ø‡§∏‡•ç‡§ü‡§∞",
      logout: "‡§≤‡•â‡§ó‡§Ü‡§â‡§ü",
      welcomeUser: "‡§Ü‡§™‡§ï‡§æ ‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§π‡•à",
    },
    en: {
      title: "Health Service Chatbot",
      subtitle: "Government of India | Ministry of Health & Family Welfare",
      welcome:
        "Hello! I am your health assistant. I can provide information about diseases, vaccination schedules, and health-related queries.",
      placeholder: "Type your question here...",
      send: "Send",
      helplineArray: [
        "üìû Emergency Helpline: 108",
        "üöë Local Ambulance: 102",
        "üíä PM Jan Aushadhi: 1800-11-4415",
      ],
      you: "You",
      bot: "Health Assistant",
      quickActions: {
        title: "Quick Help",
        vaccination: "Vaccination Schedule",
        symptoms: "COVID-19 Symptoms",
        nearbyHospital: "Nearby Hospitals",
        emergency: "Emergency Services",
      },
      login: "Login",
      register: "Register",
      logout: "Logout",
      welcomeUser: "Welcome",
    },
  };

  const t = translations[language];

  const sendMessage = async (message?: string) => {
    const textToSend = message || input;
    if (!textToSend.trim()) return;

    const timestamp = new Date().toLocaleTimeString("hi-IN", {
      hour: "2-digit",
      minute: "2-digit",
    });

    setMessages([
      ...messages,
      {
        sender: t.you,
        text: textToSend,
        timestamp,
      },
    ]);
    setLoading(true);

    try {
      const token = localStorage.getItem("access_token");
      const headers = token ? { Authorization: `Bearer ${token}` } : {};

      const res = await axios.post(
        "http://127.0.0.1:8000/api/chat/",
        {
          message: textToSend,
          language: language,
        },
        { headers }
      );

      setMessages((prev) => [
        ...prev,
        {
          sender: t.bot,
          text: res.data.bot,
          timestamp: new Date().toLocaleTimeString("hi-IN", {
            hour: "2-digit",
            minute: "2-digit",
          }),
        },
      ]);
    } catch (err) {
      setMessages((prev) => [
        ...prev,
        {
          sender: t.bot,
          text:
            language === "hi"
              ? "‚ö†Ô∏è ‡§∏‡§∞‡•ç‡§µ‡§∞ ‡§∏‡•á ‡§ï‡§®‡•á‡§ï‡•ç‡§ü ‡§®‡§π‡•Ä‡§Ç ‡§π‡•ã ‡§™‡§æ ‡§∞‡§π‡§æ ‡§π‡•à"
              : "‚ö†Ô∏è Error connecting to server",
          timestamp: new Date().toLocaleTimeString("hi-IN", {
            hour: "2-digit",
            minute: "2-digit",
          }),
        },
      ]);
    } finally {
      setLoading(false);
    }

    setInput("");
  };

  const quickAction = (action: string) => {
    sendMessage(action);
  };

  return (
    <div className="app-container">
      {/* Header */}
      <header className="gov-header">
        <div className="header-content">
          <div className="header-left">
            <div className="gov-logo">
              <img src={ashokEmblem} alt="Ashoka Emblem" width={50} />
              <div>
                <h1>{t.title}</h1>
                <p>{t.subtitle}</p>
              </div>
            </div>
          </div>

          <div className="header-right">
            {/* User info or login/register buttons */}
            {isLoggedIn ? (
              <div className="user-info">
                <span>
                  {user ? `${t.welcomeUser}, ${user.username}` : t.welcomeUser}
                </span>
                <button className="logout-btn" onClick={handleLogout}>
                  {t.logout}
                </button>
              </div>
            ) : (
              <div className="auth-buttons">
                <button className="login-btn" onClick={handleLoginClick}>
                  <svg
                    width="16"
                    height="16"
                    viewBox="0 0 16 16"
                    fill="currentColor"
                  >
                    <path d="M8 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm4-6c0-.6-.4-1-1-1H5c-.6 0-1 .4-1 1v10c0 .6.4 1 1 1h6c.6 0 1-.4 1-1V4z" />
                  </svg>
                  {t.login}
                </button>
                <button className="register-btn" onClick={handleRegisterClick}>
                  {t.register}
                </button>
              </div>
            )}

            <div className="language-toggle">
              <button
                className={language === "hi" ? "active" : ""}
                onClick={() => setLanguage("hi")}
              >
                ‡§π‡§ø‡§®‡•ç‡§¶‡•Ä
              </button>
              <button
                className={language === "en" ? "active" : ""}
                onClick={() => setLanguage("en")}
              >
                English
              </button>
            </div>
          </div>
        </div>

        {/* Emergency bar messages */}
        <div className="emergency-bar">
          <div className="ticker-wrapper">
            <div className="ticker">
              {t.helplineArray.map((msg, idx) => (
                <div key={idx} className="ticker-message">
                  {msg}
                </div>
              ))}
            </div>
          </div>
        </div>
      </header>

      {/* Main Chat Container */}
      <div className="chat-container">
        {/* Quick Actions */}
        <div className="quick-actions">
          <h3>{t.quickActions.title}</h3>
          <div className="action-buttons">
            <button onClick={() => quickAction(t.quickActions.vaccination)}>
              üíâ {t.quickActions.vaccination}
            </button>
            <button onClick={() => quickAction(t.quickActions.symptoms)}>
              ü§í {t.quickActions.symptoms}
            </button>
            <button onClick={() => quickAction(t.quickActions.nearbyHospital)}>
              üè• {t.quickActions.nearbyHospital}
            </button>
            <button
              onClick={() => quickAction(t.quickActions.emergency)}
              className="emergency"
            >
              üö® {t.quickActions.emergency}
            </button>
          </div>
        </div>

        {/* Chat Messages */}
        <div className="chat-messages">
          {messages.length === 0 && (
            <div className="welcome-message">
              <img
                src="https://cdn-icons-png.flaticon.com/512/2972/2972207.png"
                alt="Health Icon"
              />
              <p>{t.welcome}</p>

              {/* Info Cards Section */}
              <div className="info-row">
                {/* Card 1 - Polio Prevention */}
                <a
                  href="https://www.mohfw.gov.in/"
                  target="_blank"
                  rel="noopener noreferrer"
                  className="flip-card"
                >
                  <div className="flip-card-inner">
                    <div
                      className="flip-card-front card1"
                      style={{
                        backgroundImage: `url(${polioImg})`,
                        backgroundSize: "cover",
                        backgroundPosition: "center",
                      }}
                    >
                      ü©∫ Polio Prevention
                    </div>
                    <div className="flip-card-back card1">
                      Learn how to prevent polio ‚Üí
                    </div>
                  </div>
                </a>

                {/* Card 2 - PM Yojanas */}
                <a
                  href="https://www.myscheme.gov.in/"
                  target="_blank"
                  rel="noopener noreferrer"
                  className="flip-card"
                >
                  <div className="flip-card-inner">
                    <div
                      className="flip-card-front card1"
                      style={{
                        backgroundImage: `url(${pmYojanaImg})`,
                        backgroundSize: "cover",
                        backgroundPosition: "center",
                      }}
                    >
                      ü©∫ Ayushman Bharat Yojna
                    </div>
                    <div className="flip-card-back card1">
                      Explore PM Schemes ‚Üí
                    </div>
                  </div>
                </a>

                {/* Card 3 - NCDC */}
                <a
                  href="https://ncdc.gov.in/"
                  target="_blank"
                  rel="noopener noreferrer"
                  className="flip-card"
                >
                  <div className="flip-card-inner">
                    <div
                      className="flip-card-front card1"
                      style={{
                        backgroundImage: `url(${ncdcImg})`,
                        backgroundSize: "cover",
                        backgroundPosition: "center",
                      }}
                    >
                      ü¶† Epidemic Control
                    </div>
                    <div className="flip-card-back card1">
                      Prevent outbreaks ‚Üí
                    </div>
                  </div>
                </a>

                {/* Card 4 - NHM */}
                <a
                  href="https://nhm.gov.in/"
                  target="_blank"
                  rel="noopener noreferrer"
                  className="flip-card"
                >
                  <div className="flip-card-inner">
                    <div
                      className="flip-card-front card1"
                      style={{
                        backgroundImage: `url(${maternalHealthImg})`,
                        backgroundSize: "cover",
                        backgroundPosition: "center",
                      }}
                    >
                      Maternal Health
                    </div>
                    <div className="flip-card-back card1">
                      Post pregnancy Care ‚Üí
                    </div>
                  </div>
                </a>
              </div>

              {/* Second Row - Health, Yoga, Ayurveda */}
              <div className="info-row second-row">
                {/* Card 5 - Health */}
                <a
                  href="https://nutritionsource.hsph.harvard.edu/healthy-eating-plate/translations/hindi/"
                  target="_blank"
                  rel="noopener noreferrer"
                  className="flip-card"
                >
                  <div className="flip-card-inner">
                    <div
                      className="flip-card-front card2"
                      style={{
                        backgroundImage: `url(${healthImg})`,
                        backgroundSize: "cover",
                        backgroundPosition: "center",
                      }}
                    >
                      ü•ó ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø
                    </div>
                    <div className="flip-card-back card2">
                      ‡§∏‡•ç‡§µ‡§∏‡•ç‡§• ‡§Ü‡§π‡§æ‡§∞ ‡§Ø‡•ã‡§ú‡§®‡§æ ‚Üí
                    </div>
                  </div>
                </a>

                {/* Card 6 - Yoga */}
                <a
                  href="https://yoga.ayush.gov.in/"
                  target="_blank"
                  rel="noopener noreferrer"
                  className="flip-card"
                >
                  <div className="flip-card-inner">
                    <div
                      className="flip-card-front card2"
                      style={{
                        backgroundImage: `url(${yogaImg})`,
                        backgroundSize: "cover",
                        backgroundPosition: "center",
                      }}
                    >
                      üßò ‡§Ø‡•ã‡§ó
                    </div>
                    <div className="flip-card-back card2">
                      ‡§Ø‡•ã‡§ó ‡§ï‡•á ‡§≤‡§æ‡§≠ ‡§ú‡§æ‡§®‡•á‡§Ç ‚Üí
                    </div>
                  </div>
                </a>

                {/* Card 7 - Ayurveda */}
                <a
                  href="https://ayush.gov.in/#!/"
                  target="_blank"
                  rel="noopener noreferrer"
                  className="flip-card"
                >
                  <div className="flip-card-inner">
                    <div
                      className="flip-card-front card2"
                      style={{
                        backgroundImage: `url(${ayurvedImg})`,
                        backgroundSize: "cover",
                        backgroundPosition: "center",
                      }}
                    >
                      üåø ‡§Ü‡§Ø‡•Å‡§∞‡•ç‡§µ‡•á‡§¶
                    </div>
                    <div className="flip-card-back card2">
                      ‡§Ü‡§Ø‡•Å‡§∞‡•ç‡§µ‡•á‡§¶‡§ø‡§ï ‡§â‡§™‡§ö‡§æ‡§∞ ‚Üí
                    </div>
                  </div>
                </a>
              </div>
            </div>
          )}

          {messages.map((msg, idx) => (
            <div
              key={idx}
              className={`message ${
                msg.sender === t.you ? "user-message" : "bot-message"
              }`}
            >
              <div className="message-header">
                <span className="sender">{msg.sender}</span>
                <span className="timestamp">{msg.timestamp}</span>
              </div>
              <div className="message-text">{msg.text}</div>
            </div>
          ))}

          {loading && (
            <div className="typing-indicator">
              <span></span>
              <span></span>
              <span></span>
            </div>
          )}
        </div>

        {/* Input Area */}
        <div className="input-area">
          <input
            type="text"
            value={input}
            onChange={(e) => setInput(e.target.value)}
            onKeyPress={(e) => e.key === "Enter" && sendMessage()}
            placeholder={t.placeholder}
            className="message-input"
          />
          <button
            onClick={() => sendMessage()}
            className="send-button"
            disabled={loading}
          >
            {loading ? "..." : t.send}
          </button>
        </div>
      </div>

      {/* Footer */}
      <footer className="gov-footer">
        <p>¬© 2025 ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§è‡§µ‡§Ç ‡§™‡§∞‡§ø‡§µ‡§æ‡§∞ ‡§ï‡§≤‡•ç‡§Ø‡§æ‡§£ ‡§Æ‡§Ç‡§§‡•ç‡§∞‡§æ‡§≤‡§Ø, ‡§≠‡§æ‡§∞‡§§ ‡§∏‡§∞‡§ï‡§æ‡§∞</p>
        <p>Ministry of Health & Family Welfare, Government of India</p>
      </footer>
    </div>
  );
}

export default App;
